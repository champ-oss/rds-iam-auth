// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/rds_client/rds_client.go

// Package mock_rds_client is a generated GoMock package.
package mock_rds_client

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRdsClientInterface is a mock of RdsClientInterface interface.
type MockRdsClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRdsClientInterfaceMockRecorder
}

// MockRdsClientInterfaceMockRecorder is the mock recorder for MockRdsClientInterface.
type MockRdsClientInterfaceMockRecorder struct {
	mock *MockRdsClientInterface
}

// NewMockRdsClientInterface creates a new mock instance.
func NewMockRdsClientInterface(ctrl *gomock.Controller) *MockRdsClientInterface {
	mock := &MockRdsClientInterface{ctrl: ctrl}
	mock.recorder = &MockRdsClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRdsClientInterface) EXPECT() *MockRdsClientInterfaceMockRecorder {
	return m.recorder
}

// GetAllDBClusters mocks base method.
func (m *MockRdsClientInterface) GetAllDBClusters() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllDBClusters")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetAllDBClusters indicates an expected call of GetAllDBClusters.
func (mr *MockRdsClientInterfaceMockRecorder) GetAllDBClusters() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllDBClusters", reflect.TypeOf((*MockRdsClientInterface)(nil).GetAllDBClusters))
}

// GetAllDBInstances mocks base method.
func (m *MockRdsClientInterface) GetAllDBInstances() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllDBInstances")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetAllDBInstances indicates an expected call of GetAllDBInstances.
func (mr *MockRdsClientInterfaceMockRecorder) GetAllDBInstances() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllDBInstances", reflect.TypeOf((*MockRdsClientInterface)(nil).GetAllDBInstances))
}
