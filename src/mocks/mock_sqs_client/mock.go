// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/sqs_client/sqs_client.go

// Package mock_sqs_client is a generated GoMock package.
package mock_sqs_client

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSqsClientInterface is a mock of SqsClientInterface interface.
type MockSqsClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSqsClientInterfaceMockRecorder
}

// MockSqsClientInterfaceMockRecorder is the mock recorder for MockSqsClientInterface.
type MockSqsClientInterfaceMockRecorder struct {
	mock *MockSqsClientInterface
}

// NewMockSqsClientInterface creates a new mock instance.
func NewMockSqsClientInterface(ctrl *gomock.Controller) *MockSqsClientInterface {
	mock := &MockSqsClientInterface{ctrl: ctrl}
	mock.recorder = &MockSqsClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSqsClientInterface) EXPECT() *MockSqsClientInterfaceMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockSqsClientInterface) Send(messageBody string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", messageBody)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockSqsClientInterfaceMockRecorder) Send(messageBody interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockSqsClientInterface)(nil).Send), messageBody)
}
